@model DSUGrupp1.Models.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

@section LeftContent {
    @await Component.InvokeAsync("Chart", new { Id = "1", ChartModel = Model.Charts[0] })
}

@section RightContent {

   
    <div id="deSo-statistics">
        @Html.DropDownListFor(d => d.DeSoDropDown.SelectedDeso, Model.DeSoDropDown.DeSos, "V채lj ett omr책de", new { @id = "deSo-dropdown" })

    </div>
    <p id="total-population"></p>
    <p id="total-vaccinations"></p>
    <p id="dose-one"></p>
    <p id="dose-two"></p>
    <p id="dose-three"></p>
    <canvas id="deSo-chart"></canvas>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deSoDropdown = document.getElementById('deSo-dropdown');

            deSoDropdown.addEventListener('change', function () {
                let selectedDeSo = this.value;
                console.log(selectedDeSo);


                fetch('/Home/GetChartFromDeSoCode', {
                    method: 'POST',
                    headers: {
                        'Content-type': 'application/json',

                    },
                    body: JSON.stringify({ selectedDeSo }),
                })

                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Inte bra');
                        }
                        return response.json();
                    })
                    .then(data => {

                        const deSoStatisticContainer = document.getElementById('deSo-statistics');

                        const population = document.createElement('p');
                        population.innerText = 'Inv책nare i omr책det: ' + data.population;

                        deSoStatisticContainer.appendChild(population);

                        const vaccinations = document.getElementById('total-vaccinations');
                        vaccinations.innerText = data.totalPatients;

                        const doseOne = document.getElementById('dose-one');
                        doseOne.innerText = data.doseOne;

                        const doseTwo = document.getElementById('dose-two');
                        doseTwo.innerText = data.doseTwo;

                        const doseThree = document.getElementById('dose-three');
                        doseThree.innerText = data.booster;

                        console.log('Succes:', data);
                        const ctx = document.getElementById('deSo-chart').getContext('2d');

                        const chart = JSON.parse(data.jsonChart);

                        new Chart(ctx, chart); 
                        
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                    });
            });
        });
    </script>

    
    
}

@section CenterContent1 {
    @await Component.InvokeAsync("Chart", "2") 
}

@section CenterContent2 {
    <div class="female-chart">
    @await Component.InvokeAsync("Chart", new { Id = "4", ChartModel = Model.Charts[1] })
    </div>
}




